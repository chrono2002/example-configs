# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # config.vm.synced_folder "../data", "/vagrant_data"

  config.vm.provider :libvirt do |libvirt|
    libvirt.default_prefix = 'docker'
    libvirt.storage_pool_name = 'images'
    libvirt.storage :file, :size => '30G', :type => 'qcow2'
    libvirt.memory = 2048
    libvirt.volume_cache = 'writeback'
    libvirt.autostart = true
#    libvirt.mgmt_attach = false
  end

  config.vm.define "server" do |server|
    ip = "172.20.0.231"
    mac = "525400dc0312"
    hostname = "server.docker"

    server.vm.box = "generic/ubuntu1804"
    server.vm.network "public_network",
        :dev => "br0", 
        :mac => "#{mac}",
        :auto_config => false

#        :type => "dhcp",
#        :ip => "#{ip}",
#        :use_dhcp_assigned_default_route => true
#sed -i "s/dhcp4: true/dhcp4: false/g" /etc/netplan/01-netcfg.yaml
        #echo 'SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="52:54:00:dc:03:12", NAME="eth0"' > /etc/udev/rules.d/10-network.rules

    server.vm.provision "shell" do |s|
      s.inline = <<-SHELL
        echo #{ip} #{hostname} >> /etc/hosts
        /usr/bin/hostnamectl set-hostname #{hostname}
      SHELL
    end

    server.vm.provision "shell", path: "provision.sh", :args => ["#{ip}"]
  end

  config.vm.define "node1" do |node1|
    ip = "172.20.0.232"
    mac = "525400302221"

    node1.vm.box = "generic/ubuntu1804"
    node1.vm.network "public_network",
        :dev => "br0", 
        :mac => "#{mac}",
        :ip => "#{ip}",
        :use_dhcp_assigned_default_route => true
    node1.vm.provision "shell", run: "always", inline: "/usr/bin/hostnamectl set-hostname node1.docker"
    node1.vm.provision "shell", run: "always", inline: "echo #{ip} >> /etc/hosts"
#    node1.vm.provision "shell" do |s|
#      s.inline = <<-SHELL
#        echo 'SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="52:54:00:30:22:21", NAME="eth0"' > /etc/udev/rules.d/10-network.rules
#      SHELL
#    end
#    node1.vm.provision "shell", run: "always", inline: "echo 'SUBSYSTEM==\"net\", ACTION=='add', ATTR{address}=='52:54:00:30:22:21', NAME='eth0'\" > /etc/udev/rules.d/10-network.rules"
  end

#  config.vm.provision "shell", run: "always", inline: "/sbin/dhclient -r eth1; /sbin/route del default; /sbin/dhclient eth1"

  config.vm.provision "shell" do |s|
    my_pub_key = File.readlines("id_rsa.pub").first.strip
    server_pub_key = File.readlines("/root/.ssh/id_rsa.pub").first.strip
    s.inline = <<-SHELL
      echo #{my_pub_key} >> /home/vagrant/.ssh/authorized_keys
      echo #{server_pub_key} >> /home/vagrant/.ssh/authorized_keys
      ip addr show eth1 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1 >> /etc/hosts
      apt-get -y -q install python
#      route del default gw 192.168.121.1
    SHELL
  end
end
